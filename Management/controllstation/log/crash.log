2019-01-19 14:18:45 =SUPERVISOR REPORT====
     Supervisor: {<0.60.0>,user_sup}
     Context:    child_terminated
     Reason:     einval
     Offender:   [{pid,<0.61.0>},{mod,user_sup}]

2019-01-19 14:18:45 =ERROR REPORT====
** Generic server <0.60.0> terminating 
** Last message in was {'EXIT',<0.61.0>,einval}
** When Server state == {state,user_sup,undefined,<0.61.0>,{<0.60.0>,user_sup}}
** Reason for termination == 
** einval
2019-01-19 14:18:45 =CRASH REPORT====
  crasher:
    initial call: supervisor_bridge:user_sup/1
    pid: <0.60.0>
    registered_name: []
    exception exit: {einval,[{gen_server,handle_common_reply,8,[{file,"gen_server.erl"},{line,751}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,249}]}]}
    ancestors: [kernel_sup,<0.46.0>]
    message_queue_len: 0
    messages: []
    links: [<0.48.0>]
    dictionary: []
    trap_exit: true
    status: running
    heap_size: 1598
    stack_size: 27
    reductions: 1764
  neighbours:
2019-01-19 14:18:45 =SUPERVISOR REPORT====
     Supervisor: {local,kernel_sup}
     Context:    child_terminated
     Reason:     einval
     Offender:   [{pid,<0.60.0>},{id,user},{mfargs,{user_sup,start,[]}},{restart_type,temporary},{shutdown,2000},{child_type,supervisor}]

2019-01-19 14:18:45 =ERROR REPORT====
** gen_event handler 'Elixir.Logger.Backends.Console' crashed.
** Was installed in 'Elixir.Logger'
** Last event was: {error,<0.45.0>,{'Elixir.Logger',[[<<"GenServer ">>,<<"#PID<0.60.0>">>,<<" terminating">>,[<<"\n** (stop) ">>|<<":einval">>],<<"\nLast message">>,[],<<": ">>,<<"{:EXIT, #PID<0.61.0>, :einval}">>],<<"\nState: ">>,<<"{:state, :user_sup, :undefined, #PID<0.61.0>, {#PID<0.60.0>, :user_sup}}">>],{{2019,1,19},{14,18,45,342}},[{crash_reason,{einval,[]}},{function,<<"error_info/7">>},{module,gen_server},{line,888},{file,<<"gen_server.erl">>},{pid,<0.60.0>}]}}
** When handler state == #{'__struct__' => 'Elixir.Logger.Backends.Console',buffer => [],buffer_size => 0,colors => #{debug => cyan,enabled => false,error => red,info => normal,warn => yellow},device => user,format => [<<"\n">>,time,<<" ">>,metadata,<<"[">>,level,<<"] ">>,levelpad,message,<<"\n">>],level => nil,max_buffer => 32,metadata => [],output => nil,ref => nil}
** Reason == {#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"no device registered with the name :user">>},[{'Elixir.Logger.Backends.Console',async_io,2,[{file,"lib/logger/backends/console.ex"},{line,160}]},{'Elixir.Logger.Backends.Console',log_event,5,[{file,"lib/logger/backends/console.ex"},{line,145}]},{'Elixir.Logger.Backends.Console',handle_event,2,[{file,"lib/logger/backends/console.ex"},{line,49}]},{gen_event,server_update,4,[{file,"gen_event.erl"},{line,577}]},{gen_event,server_notify,4,[{file,"gen_event.erl"},{line,559}]},{gen_event,handle_msg,6,[{file,"gen_event.erl"},{line,300}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,249}]}]}
2019-01-19 14:18:45 =ERROR REPORT====
** Generic server <0.175.0> terminating 
** Last message in was {gen_event_EXIT,'Elixir.Logger.Backends.Console',{'EXIT',{#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"no device registered with the name :user">>},[{'Elixir.Logger.Backends.Console',async_io,2,[{file,"lib/logger/backends/console.ex"},{line,160}]},{'Elixir.Logger.Backends.Console',log_event,5,[{file,"lib/logger/backends/console.ex"},{line,145}]},{'Elixir.Logger.Backends.Console',handle_event,2,[{file,"lib/logger/backends/console.ex"},{line,49}]},{gen_event,server_update,4,[{file,"gen_event.erl"},{line,577}]},{gen_event,server_notify,4,[{file,"gen_event.erl"},{line,559}]},{gen_event,handle_msg,6,[{file,"gen_event.erl"},{line,300}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,249}]}]}}}
** When Server state == {'Elixir.Logger','Elixir.Logger.Backends.Console'}
** Reason for termination == 
** {'EXIT',{#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"no device registered with the name :user">>},[{'Elixir.Logger.Backends.Console',async_io,2,[{file,"lib/logger/backends/console.ex"},{line,160}]},{'Elixir.Logger.Backends.Console',log_event,5,[{file,"lib/logger/backends/console.ex"},{line,145}]},{'Elixir.Logger.Backends.Console',handle_event,2,[{file,"lib/logger/backends/console.ex"},{line,49}]},{gen_event,server_update,4,[{file,"gen_event.erl"},{line,577}]},{gen_event,server_notify,4,[{file,"gen_event.erl"},{line,559}]},{gen_event,handle_msg,6,[{file,"gen_event.erl"},{line,300}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,249}]}]}}
2019-01-19 14:18:45 =SUPERVISOR REPORT====
     Supervisor: {local,standard_error_sup}
     Context:    child_terminated
     Reason:     einval
     Offender:   [{pid,<0.59.0>},{mod,standard_error}]

2019-01-19 14:18:45 =ERROR REPORT====
** Generic server standard_error_sup terminating 
** Last message in was {'EXIT',<0.59.0>,einval}
** When Server state == {state,standard_error,undefined,<0.59.0>,{local,standard_error_sup}}
** Reason for termination == 
** einval
2019-01-19 14:18:45 =CRASH REPORT====
  crasher:
    initial call: supervisor_bridge:standard_error/1
    pid: <0.58.0>
    registered_name: standard_error_sup
    exception exit: {einval,[{gen_server,handle_common_reply,8,[{file,"gen_server.erl"},{line,751}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,249}]}]}
    ancestors: [kernel_sup,<0.46.0>]
    message_queue_len: 0
    messages: []
    links: [<0.48.0>]
    dictionary: []
    trap_exit: true
    status: running
    heap_size: 376
    stack_size: 27
    reductions: 1812
  neighbours:
2019-01-19 14:18:45 =CRASH REPORT====
  crasher:
    initial call: Elixir.Logger.Watcher:init/1
    pid: <0.175.0>
    registered_name: []
    exception exit: {{'EXIT',{#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"no device registered with the name :user">>},[{'Elixir.Logger.Backends.Console',async_io,2,[{file,"lib/logger/backends/console.ex"},{line,160}]},{'Elixir.Logger.Backends.Console',log_event,5,[{file,"lib/logger/backends/console.ex"},{line,145}]},{'Elixir.Logger.Backends.Console',handle_event,2,[{file,"lib/logger/backends/console.ex"},{line,49}]},{gen_event,server_update,4,[{file,"gen_event.erl"},{line,577}]},{gen_event,server_notify,4,[{file,"gen_event.erl"},{line,559}]},{gen_event,handle_msg,6,[{file,"gen_event.erl"},{line,300}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,249}]}]}},[{gen_server,handle_common_reply,8,[{file,"gen_server.erl"},{line,751}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,249}]}]}
    ancestors: ['Elixir.Logger.WatcherSupervisor','Elixir.Logger.Supervisor',<0.170.0>]
    message_queue_len: 0
    messages: []
    links: [<0.174.0>,<0.172.0>]
    dictionary: []
    trap_exit: true
    status: running
    heap_size: 4185
    stack_size: 27
    reductions: 41770
  neighbours:
2019-01-19 14:18:45 =SUPERVISOR REPORT====
     Supervisor: {local,kernel_sup}
     Context:    child_terminated
     Reason:     einval
     Offender:   [{pid,<0.58.0>},{id,standard_error},{mfargs,{standard_error,start_link,[]}},{restart_type,temporary},{shutdown,2000},{child_type,supervisor}]

2019-01-19 14:18:45 =SUPERVISOR REPORT====
     Supervisor: {local,'Elixir.Logger.WatcherSupervisor'}
     Context:    child_terminated
     Reason:     {'EXIT',{#{'__exception__' => true,'__struct__' => 'Elixir.RuntimeError',message => <<"no device registered with the name :user">>},[{'Elixir.Logger.Backends.Console',async_io,2,[{file,"lib/logger/backends/console.ex"},{line,160}]},{'Elixir.Logger.Backends.Console',log_event,5,[{file,"lib/logger/backends/console.ex"},{line,145}]},{'Elixir.Logger.Backends.Console',handle_event,2,[{file,"lib/logger/backends/console.ex"},{line,49}]},{gen_event,server_update,4,[{file,"gen_event.erl"},{line,577}]},{gen_event,server_notify,4,[{file,"gen_event.erl"},{line,559}]},{gen_event,handle_msg,6,[{file,"gen_event.erl"},{line,300}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,249}]}]}}
     Offender:   [{pid,<0.175.0>},{id,{'Elixir.Logger.WatcherSupervisor',{'Elixir.Logger','Elixir.Logger.Backends.Console'}}},{mfargs,{'Elixir.Logger.Watcher',start_link,[{'Elixir.Logger','Elixir.Logger.Backends.Console',console}]}},{restart_type,transient},{shutdown,5000},{child_type,worker}]

2019-01-19 14:18:47 =ERROR REPORT====
** gen_event handler lager_console_backend crashed.
** Was installed in lager_event
** Last event was: {log,{lager_msg,[],[{pid,<0.203.0>}],warning,{["2019",45,"01",45,"19"],["14",58,"18",58,"46",46,"006"]},{1547,903926,6000},[108,97,103,101,114,95,101,114,114,111,114,95,108,111,103,103,101,114,95,104,32,100,114,111,112,112,101,100,32,"2",32,109,101,115,115,97,103,101,115,32,105,110,32,116,104,101,32,108,97,115,116,32,115,101,99,111,110,100,32,116,104,97,116,32,101,120,99,101,101,100,101,100,32,116,104,101,32,108,105,109,105,116,32,111,102,32,"50",32,109,101,115,115,97,103,101,115,47,115,101,99]}}
** When handler state == {state,{mask,127},user,lager_console_backend,lager_default_formatter,[time," ",color,"[",severity,"] ",message,"\r\n"],[]}
** Reason == {badarg,[{io,put_chars,[user,unicode,[["14",58,"18",58,"46",46,"006"]," ",[],"[","warning","] ",[108,97,103,101,114,95,101,114,114,111,114,95,108,111,103,103,101,114,95,104,32,100,114,111,112,112,101,100,32,"2",32,109,101,115,115,97,103,101,115,32,105,110,32,116,104,101,32,108,97,115,116,32,115,101,99,111,110,100,32,116,104,97,116,32,101,120,99,101,101,100,101,100,32,116,104,101,32,108,105,109,105,116,32,111,102,32,"50",32,109,101,115,115,97,103,101,115,47,115,101,99],"\r\n"]],[]},{lager_console_backend,handle_event,2,[{file,"f:/fajne rzeczy/PT-LaboratoryMonitoring/controllstation/deps/lager/src/lager_console_backend.erl"},{line,179}]},{gen_event,server_update,4,[{file,"gen_event.erl"},{line,577}]},{gen_event,server_notify,4,[{file,"gen_event.erl"},{line,559}]},{gen_event,handle_msg,6,[{file,"gen_event.erl"},{line,300}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,249}]}]}
